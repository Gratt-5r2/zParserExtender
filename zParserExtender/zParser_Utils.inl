// Supported with union (c) 2020 Union team
// Union HEADER file

namespace GOTHIC_ENGINE {
#define MAP_REGISTERKEY(key) map.Insert( #key, key )

  Map<string, int>& zInput_CreateKeyList() {
    static Map<string, int> map;
    map.Clear();
    MAP_REGISTERKEY( KEY_ESCAPE );
    MAP_REGISTERKEY( KEY_1 );
    MAP_REGISTERKEY( KEY_2 );
    MAP_REGISTERKEY( KEY_3 );
    MAP_REGISTERKEY( KEY_4 );
    MAP_REGISTERKEY( KEY_5 );
    MAP_REGISTERKEY( KEY_6 );
    MAP_REGISTERKEY( KEY_7 );
    MAP_REGISTERKEY( KEY_8 );
    MAP_REGISTERKEY( KEY_9 );
    MAP_REGISTERKEY( KEY_0 );
    MAP_REGISTERKEY( KEY_MINUS );
    MAP_REGISTERKEY( KEY_EQUALS );
    MAP_REGISTERKEY( KEY_BACK );
    MAP_REGISTERKEY( KEY_TAB );
    MAP_REGISTERKEY( KEY_Q );
    MAP_REGISTERKEY( KEY_W );
    MAP_REGISTERKEY( KEY_E );
    MAP_REGISTERKEY( KEY_R );
    MAP_REGISTERKEY( KEY_T );
    MAP_REGISTERKEY( KEY_Y );
    MAP_REGISTERKEY( KEY_U );
    MAP_REGISTERKEY( KEY_I );
    MAP_REGISTERKEY( KEY_O );
    MAP_REGISTERKEY( KEY_P );
    MAP_REGISTERKEY( KEY_LBRACKET );
    MAP_REGISTERKEY( KEY_RBRACKET );
    MAP_REGISTERKEY( KEY_RETURN );
    MAP_REGISTERKEY( KEY_LCONTROL );
    MAP_REGISTERKEY( KEY_A );
    MAP_REGISTERKEY( KEY_S );
    MAP_REGISTERKEY( KEY_D );
    MAP_REGISTERKEY( KEY_F );
    MAP_REGISTERKEY( KEY_G );
    MAP_REGISTERKEY( KEY_H );
    MAP_REGISTERKEY( KEY_J );
    MAP_REGISTERKEY( KEY_K );
    MAP_REGISTERKEY( KEY_L );
    MAP_REGISTERKEY( KEY_SEMICOLON );
    MAP_REGISTERKEY( KEY_APOSTROPHE );
    MAP_REGISTERKEY( KEY_GRAVE );
    MAP_REGISTERKEY( KEY_LSHIFT );
    MAP_REGISTERKEY( KEY_BACKSLASH );
    MAP_REGISTERKEY( KEY_Z );
    MAP_REGISTERKEY( KEY_X );
    MAP_REGISTERKEY( KEY_C );
    MAP_REGISTERKEY( KEY_V );
    MAP_REGISTERKEY( KEY_B );
    MAP_REGISTERKEY( KEY_N );
    MAP_REGISTERKEY( KEY_M );
    MAP_REGISTERKEY( KEY_COMMA );
    MAP_REGISTERKEY( KEY_PERIOD );
    MAP_REGISTERKEY( KEY_SLASH );
    MAP_REGISTERKEY( KEY_RSHIFT );
    MAP_REGISTERKEY( KEY_MULTIPLY );
    MAP_REGISTERKEY( KEY_LMENU );
    MAP_REGISTERKEY( KEY_SPACE );
    MAP_REGISTERKEY( KEY_CAPITAL );
    MAP_REGISTERKEY( KEY_F1 );
    MAP_REGISTERKEY( KEY_F2 );
    MAP_REGISTERKEY( KEY_F3 );
    MAP_REGISTERKEY( KEY_F4 );
    MAP_REGISTERKEY( KEY_F5 );
    MAP_REGISTERKEY( KEY_F6 );
    MAP_REGISTERKEY( KEY_F7 );
    MAP_REGISTERKEY( KEY_F8 );
    MAP_REGISTERKEY( KEY_F9 );
    MAP_REGISTERKEY( KEY_F10 );
    MAP_REGISTERKEY( KEY_NUMLOCK );
    MAP_REGISTERKEY( KEY_SCROLL );
    MAP_REGISTERKEY( KEY_NUMPAD7 );
    MAP_REGISTERKEY( KEY_NUMPAD8 );
    MAP_REGISTERKEY( KEY_NUMPAD9 );
    MAP_REGISTERKEY( KEY_SUBTRACT );
    MAP_REGISTERKEY( KEY_NUMPAD4 );
    MAP_REGISTERKEY( KEY_NUMPAD5 );
    MAP_REGISTERKEY( KEY_NUMPAD6 );
    MAP_REGISTERKEY( KEY_ADD );
    MAP_REGISTERKEY( KEY_NUMPAD1 );
    MAP_REGISTERKEY( KEY_NUMPAD2 );
    MAP_REGISTERKEY( KEY_NUMPAD3 );
    MAP_REGISTERKEY( KEY_NUMPAD0 );
    MAP_REGISTERKEY( KEY_DECIMAL );
    MAP_REGISTERKEY( KEY_OEM_102 );
    MAP_REGISTERKEY( KEY_F11 );
    MAP_REGISTERKEY( KEY_F12 );
    MAP_REGISTERKEY( KEY_F13 );
    MAP_REGISTERKEY( KEY_F14 );
    MAP_REGISTERKEY( KEY_F15 );
    MAP_REGISTERKEY( KEY_KANA );
    MAP_REGISTERKEY( KEY_ABNT_C1 );
    MAP_REGISTERKEY( KEY_CONVERT );
    MAP_REGISTERKEY( KEY_NOCONVERT );
    MAP_REGISTERKEY( KEY_YEN );
    MAP_REGISTERKEY( KEY_ABNT_C2 );
    MAP_REGISTERKEY( KEY_NUMPADEQUALS );
    MAP_REGISTERKEY( KEY_PREVTRACK );
    MAP_REGISTERKEY( KEY_AT );
    MAP_REGISTERKEY( KEY_COLON );
    MAP_REGISTERKEY( KEY_UNDERLINE );
    MAP_REGISTERKEY( KEY_KANJI );
    MAP_REGISTERKEY( KEY_STOP );
    MAP_REGISTERKEY( KEY_AX );
    MAP_REGISTERKEY( KEY_UNLABELED );
    MAP_REGISTERKEY( KEY_NEXTTRACK );
    MAP_REGISTERKEY( KEY_NUMPADENTER );
    MAP_REGISTERKEY( KEY_RCONTROL );
    MAP_REGISTERKEY( KEY_MUTE );
    MAP_REGISTERKEY( KEY_CALCULATOR );
    MAP_REGISTERKEY( KEY_PLAYPAUSE );
    MAP_REGISTERKEY( KEY_MEDIASTOP );
    MAP_REGISTERKEY( KEY_VOLUMEDOWN );
    MAP_REGISTERKEY( KEY_VOLUMEUP );
    MAP_REGISTERKEY( KEY_WEBHOME );
    MAP_REGISTERKEY( KEY_NUMPADCOMMA );
    MAP_REGISTERKEY( KEY_DIVIDE );
    MAP_REGISTERKEY( KEY_SYSRQ );
    MAP_REGISTERKEY( KEY_RMENU );
    MAP_REGISTERKEY( KEY_PAUSE );
    MAP_REGISTERKEY( KEY_HOME );
    MAP_REGISTERKEY( KEY_UP );
    MAP_REGISTERKEY( KEY_PRIOR );
    MAP_REGISTERKEY( KEY_LEFT );
    MAP_REGISTERKEY( KEY_RIGHT );
    MAP_REGISTERKEY( KEY_END );
    MAP_REGISTERKEY( KEY_DOWN );
    MAP_REGISTERKEY( KEY_NEXT );
    MAP_REGISTERKEY( KEY_INSERT );
    MAP_REGISTERKEY( KEY_DELETE );
    MAP_REGISTERKEY( KEY_LWIN );
    MAP_REGISTERKEY( KEY_RWIN );
    MAP_REGISTERKEY( KEY_APPS );
    MAP_REGISTERKEY( KEY_POWER );
    MAP_REGISTERKEY( KEY_SLEEP );
    MAP_REGISTERKEY( KEY_WAKE );
    MAP_REGISTERKEY( KEY_WEBSEARCH );
    MAP_REGISTERKEY( KEY_WEBFAVORITES );
    MAP_REGISTERKEY( KEY_WEBREFRESH );
    MAP_REGISTERKEY( KEY_WEBSTOP );
    MAP_REGISTERKEY( KEY_WEBFORWARD );
    MAP_REGISTERKEY( KEY_WEBBACK );
    MAP_REGISTERKEY( KEY_MYCOMPUTER );
    MAP_REGISTERKEY( KEY_MAIL );
    MAP_REGISTERKEY( KEY_MEDIASELECT );
    return map;
  }

  static Map<string, int>& zInput_CreateLogicalKeyList() {
    static Map<string, int> map;
    map.Clear();
    MAP_REGISTERKEY( GAME_LEFT );
    MAP_REGISTERKEY( GAME_RIGHT );
    MAP_REGISTERKEY( GAME_UP );
    MAP_REGISTERKEY( GAME_DOWN );
    MAP_REGISTERKEY( GAME_ACTION );
    MAP_REGISTERKEY( GAME_SLOW );
    MAP_REGISTERKEY( GAME_ACTION2 );
    MAP_REGISTERKEY( GAME_WEAPON );
    MAP_REGISTERKEY( GAME_SMOVE );
    MAP_REGISTERKEY( GAME_SMOVE2 );
    MAP_REGISTERKEY( GAME_SHIFT );
    MAP_REGISTERKEY( GAME_END );
    MAP_REGISTERKEY( GAME_INVENTORY );
    MAP_REGISTERKEY( GAME_LOOK );
    MAP_REGISTERKEY( GAME_SNEAK );
    MAP_REGISTERKEY( GAME_STRAFELEFT );
    MAP_REGISTERKEY( GAME_STRAFERIGHT );
    MAP_REGISTERKEY( GAME_SCREEN_STATUS );
    MAP_REGISTERKEY( GAME_SCREEN_LOG );
    MAP_REGISTERKEY( GAME_SCREEN_MAP );
    MAP_REGISTERKEY( GAME_LOOK_FP );
    MAP_REGISTERKEY( GAME_LOCK_TARGET );
    MAP_REGISTERKEY( GAME_PARADE );
    MAP_REGISTERKEY( GAME_ACTIONLEFT );
    MAP_REGISTERKEY( GAME_ACTIONRIGHT );
    MAP_REGISTERKEY( GAME_LAME_POTION );
    MAP_REGISTERKEY( GAME_LAME_HEAL );
    return map;
  }

  static int zInput_GetKeyIndex( const string& keyName ) {
    static Map<string, int> map = zInput_CreateKeyList();
    auto& key = map[keyName];
    if( key.IsNull() )
      return -1;

    return key;
  }

  static int zInput_GetLogicalKeyIndex( const string& keyName ) {
    static Map<string, int> map = zInput_CreateLogicalKeyList();
    auto& key = map[keyName];
    if( key.IsNull() )
      return -1;

    return key;
  }

#undef MAP_REGISTERKEY
}